heat_template_version: 2014-10-16
#
# you can deploy this template using the following command:
# 'openstack stack create -t jira-trial.yaml --parameter key_name=<publicKeyName> <stackName>'
# 
# or you can just paste it into the web-ui under "orchestration" >> "launch stack"
#
# after successful stack creation you can login with 
# ssh -l testuser <externalIP> 
# 

description: Simple template to deploy a jira-trial stack 

parameters:
 public_network:
  type: string
  default: ext-net 
 ssh_keys:
  type: comma_delimited_list
 instance_name:
  type: string
  default: jira-trial
 s3_secret:
  type: string
 s3_access:
  type: string
 s3_region:
  type: string
  default: dbl

resources:
  allow_ssh:
    type: OS::Neutron::SecurityGroup
    properties:
      description: allow incoming SSH and ICMP traffic from anywhere.
      name: allow incoming traffic, tcp port 22 and icmp
      rules: 
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 22, port_range_max: 22, protocol: tcp } 
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, protocol: icmp } 

  allow_webtraffic:
    type: OS::Neutron::SecurityGroup
    properties:
      description: allow incoming web traffic via http from anywhere. 
      name: allow incoming traffic, tcp port 80
      rules: 
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 80, port_range_max: 80, protocol: tcp } 
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 443, port_range_max: 443, protocol: tcp } 

  allow_jiratraffic:
    type: OS::Neutron::SecurityGroup
    properties:
      description: allow incoming web traffic via http from anywhere. 
      name: allow incoming traffic, tcp port 8080
      rules: 
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 8080, port_range_max: 8080, protocol: tcp } 

  host:
    type: OS::Nova::Server
    properties:
      name: { get_param: instance_name } 
      user_data_format: RAW
      user_data: { get_resource: cloud-init-config }    
      image: "Ubuntu 16.04 LTS sys11 optimized 2018.03.21" 
      flavor: l1.medium
      networks:
        - port: { get_resource: port }

  cloud-init-config:
   # cloud init resource
   type: OS::Heat::CloudConfig
   properties:
     cloud_config:
       manage_etc_hosts: true
       fqdn: jiratrial.testuser.de
       write_files:
         -  content: { get_file: files/letsencrypt_renewalconfig }
            permissions: 600
            path: /root/letsencrypt_renewalconfig
         -  content: { get_file: scripts/install_jira.sh }
            permissions: 700
            path: /root/install_jira.sh
         -  content: { get_file: scripts/write_s3_config.sh }
            permissions: 700
            path: /root/write_s3_config.sh
         -  content: { get_file: scripts/createDbBackup.sh }
            permissions: 700
            path: /usr/local/sbin/createDbBackup
         -  content: { get_file: files/response.varfile }
            permissions: 600
            path: /root/response.varfile
         -  content: { get_file: files/nginx_defaultconfig }
            permissions: 600
            path: /root/nginx_defaultconfig
         -  content: { get_file: files/nginx_defaultconfig_ssl }
            permissions: 600
            path: /root/nginx_defaultconfig_ssl
       runcmd:
         - /root/install_jira.sh
         - [/root/write_s3_config.sh, --access_key, {get_param: s3_access}, --secret_key, {get_param: s3_secret}, --s3_region, { get_param: s3_region} ]
       users:
         -  name: testuser
            gecos:  Service user
            lock-passwd: false
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash
            ssh-authorized-keys: { get_param: ssh_keys }
       packages:
         - curl

             
  port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: net}
      security_groups: [ get_resource: allow_ssh, get_resource: allow_webtraffic ]

  net:
    type: OS::Neutron::Net
    properties: 
      name: jira-trialserver-net

  subnet:
    type: OS::Neutron::Subnet
    properties:
      name: jira-trialserver-subnet
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
      network: {get_resource: net}
      ip_version: 4
      cidr: 10.0.0.0/24
      allocation_pools:
      - {start: 10.0.0.10, end: 10.0.0.250}

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: {"network": { get_param: public_network }}
      name: jira-trialserver-router

  router_subnet_bridge:
    type: OS::Neutron::RouterInterface
    depends_on: subnet
    properties:
      router: { get_resource: router }
      subnet: { get_resource: subnet }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_network }
      port_id: { get_resource: port }
